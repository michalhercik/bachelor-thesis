import { DataContainer, TranslationGroup } from '../data';
/**
 * A utility class for creating and manipulating TranslationGroups.
 */
export declare class TranslationGroups {
    /**
    * Creates TranslationGroups from two DataContainers, optionally filtered by a specific group and a minimum size.
    * @param contA - The first DataContainer.
    * @param contB - The second DataContainer.
    * @param group - Optional TranslationGroup to filter by.
    * @param filter - Minimum size for generated TranslationGroups.
    * @returns An array of TranslationGroups.
    */
    static create(contA: DataContainer, contB: DataContainer, group?: TranslationGroup, filter?: number): Array<TranslationGroup>;
    /**
    * Returns the largest TranslationGroup from an array of TranslationGroups.
    * @param groups - The array of TranslationGroups to search.
    * @returns The largest TranslationGroup.
    */
    static getBest(groups: TranslationGroup[]): TranslationGroup;
}
