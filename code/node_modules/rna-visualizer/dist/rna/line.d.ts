import { Vector2, Transformation } from './data-structures';
export interface ILine {
    getTransformedX1(): number;
    getTransformedY1(): number;
    getTransformedX2(): number;
    getTransformedY2(): number;
    getX1(): number;
    getY1(): number;
    getX2(): number;
    getY2(): number;
    isVisible(): boolean;
    getClasses(): string[];
}
export declare class Line implements ILine {
    private coor1;
    private coor2;
    private classes;
    private visible;
    private transform;
    constructor(coor1: Vector2, coor2: Vector2, classes: string[]);
    setTransform(transform: Transformation): Line;
    getTransformedX1(): number;
    getTransformedY1(): number;
    getTransformedX2(): number;
    getTransformedY2(): number;
    setX1(x1: number): Line;
    getX1(): number;
    setY1(y1: number): Line;
    getY1(): number;
    setX2(x2: number): Line;
    getX2(): number;
    setY2(y2: number): Line;
    getY2(): number;
    setCoor1(coor: Vector2): Line;
    getCoor1(): Vector2;
    setCoor2(coor: Vector2): Line;
    getCoor2(): Vector2;
    setVisible(visible: boolean): Line;
    isVisible(): boolean;
    getClasses(): string[];
    translate(shift: Vector2): Line;
}
