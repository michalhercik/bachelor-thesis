import { Vector2, Text, Circle, } from './data-structures';
import { Styles } from '../classes';
var Residue = /** @class */ (function () {
    function Residue(name, index, templateName, templateIndex, circle, text) {
        this.visible = true;
        this.name = name;
        this.index = index;
        this.templateIndex = templateIndex;
        this.templateName = templateName;
        this.circle = circle;
        this.text = text;
    }
    Residue.fromDataResidue = function (res, styles) {
        var textCoor = new Vector2(res.x, res.y);
        var classes = Object.assign([], res.classes);
        classes.push(Styles.TRANSFORMED_CLASS);
        var text = new Text(textCoor, res.residueName, classes);
        var circleCoor = new Vector2(res.x, res.y);
        var radius = styles.getProperty(res.classes, 'font-size').slice(0, -2) * 0.75;
        var circle = new Circle(circleCoor, radius);
        return new Residue(res.residueName, res.residueIndex, res.templateResidueName, res.templateResidueIndex, circle, text);
    };
    Residue.prototype.setTransform = function (transform) {
        this.text.setTransform(transform);
        this.circle.setTransform(transform);
        return this;
    };
    Residue.prototype.getTransformedX = function () {
        return this.circle.getTransformedX();
    };
    Residue.prototype.getX = function () {
        return this.circle.getX();
    };
    Residue.prototype.setX = function (x) {
        this.circle.setX(x);
        this.text.setX(x);
        return this;
    };
    Residue.prototype.getTransformedY = function () {
        return this.circle.getTransformedY();
    };
    Residue.prototype.getY = function () {
        return this.circle.getY();
    };
    Residue.prototype.setY = function (y) {
        this.circle.setY(y);
        this.text.setY(y);
        return this;
    };
    Residue.prototype.setCoor = function (coor) {
        this.circle.setCoor(coor);
        this.text.setCoor(coor);
        return this;
    };
    Residue.prototype.getCoor = function () {
        return this.circle.getCoor();
    };
    Residue.prototype.getTransformedCoor = function () {
        return this.circle.getTransformedCoor();
    };
    Residue.prototype.setVisible = function (visible) {
        this.circle.setVisible(visible);
        this.text.setVisible(visible);
        this.visible = visible;
        return this;
    };
    Residue.prototype.isVisible = function () {
        return this.visible;
    };
    Residue.prototype.getClasses = function () {
        return this.text.getClasses();
    };
    Residue.prototype.translate = function (shift) {
        this.circle.translate(shift);
        this.text.translate(shift);
        return this;
    };
    return Residue;
}());
export { Residue };
//# sourceMappingURL=residue.js.map