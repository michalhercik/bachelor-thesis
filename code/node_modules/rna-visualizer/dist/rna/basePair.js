import { identity, } from './data-structures';
var BasePair = /** @class */ (function () {
    function BasePair(residue1, residue2, classes) {
        this.transform = identity;
        this.residue1 = residue1;
        this.residue2 = residue2;
        this.classes = classes;
    }
    BasePair.prototype.setTransform = function (transform) {
        this.transform = transform;
        return this;
    };
    BasePair.prototype.getTransformedX1 = function () {
        return this.transform.applyX(this.residue1.getX());
    };
    BasePair.prototype.getTransformedY1 = function () {
        return this.transform.applyY(this.residue1.getY());
    };
    BasePair.prototype.getTransformedX2 = function () {
        return this.transform.applyX(this.residue2.getX());
    };
    BasePair.prototype.getTransformedY2 = function () {
        return this.transform.applyY(this.residue2.getY());
    };
    BasePair.prototype.getX1 = function () {
        return this.residue1.getX();
    };
    BasePair.prototype.getY1 = function () {
        return this.residue1.getY();
    };
    BasePair.prototype.getX2 = function () {
        return this.residue2.getX();
    };
    BasePair.prototype.getY2 = function () {
        return this.residue2.getY();
    };
    BasePair.prototype.isVisible = function () {
        return this.residue1.isVisible() && this.residue2.isVisible();
    };
    BasePair.prototype.getClasses = function () {
        return this.classes;
    };
    return BasePair;
}());
export { BasePair };
//# sourceMappingURL=basePair.js.map