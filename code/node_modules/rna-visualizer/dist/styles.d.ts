/**
 * A class for defining and managing styles for RNA visualization.
 */
export declare class Styles {
    /**
     * The name of the class to add to transformed structure.
     */
    static TRANSFORMED_CLASS: string;
    /**
     * The default map of styles for RNA visualization.
     */
    private default;
    /**
     * The map of custom styles for RNA visualization.
     */
    styles: Map<string, object>;
    /**
     * Adds a set of styles to the custom styles map.
     * @param classes - An array of style objects to add to the map.
     */
    addFrom(classes: Array<object>): void;
    /**
     * Sets a style value in the custom styles map.
     * @param name - The name of the style to set.
     * @param value - The value to set for the style.
     */
    set(name: string, value: object): void;
    /**
     * Gets the style values for one or more style names combine in one object.
     * @param names - An array of style names to get.
     * @returns An object containing the style values.
     */
    get(names: Array<string>): any;
    /**
     * Gets the value of a specific property for one or more style names.
     * @param names - An array of style names to get.
     * @param property - The name of the property to get.
     * @returns The value of the specified property.
     */
    getProperty(names: Array<string>, property: string): string;
    /**
     * Resets the custom styles map to its default values.
     */
    reset(): void;
    /**
     * Generates a random hexadecimal color code.
     * @returns A randomly generated hexadecimal color code.
     */
    static randomHexColor(): string;
}
