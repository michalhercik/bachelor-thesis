import { Styles } from '../styles';
import { Vector2, Transformation } from '../components';
/**
 * Represents a Text object.
 */
export declare class Text {
    text: string;
    private coor;
    classes: string[];
    visible: boolean;
    transform: Transformation;
    /**
     * Creates a new Text object.
     * @param coor - The initial position of the object.
     * @param text - The text content of the object.
     * @param classes - An array of classes for styling the text.
     */
    constructor(coor: Vector2, text: string, classes: string[]);
    /**
     * Sets the transformation applied to the object.
     * @param transform - The transformation to apply.
     * @returns The Text object.
     */
    setTransform(transform: Transformation): Text;
    /**
     * Returns the transformed x-coordinate of the object.
     * @returns The transformed x-coordinate.
     */
    getTransformedX(): number;
    /**
     * Returns the x-coordinate of the object.
     * @returns The x-coordinate.
     */
    getX(): number;
    /**
     * Sets the x-coordinate of the object.
     * @param x - The x-coordinate to set.
     * @returns The Text object.
     */
    setX(x: number): Text;
    /**
     * Returns the transformed y-coordinate of the object.
     * @returns The transformed y-coordinate.
     */
    getTransformedY(): number;
    /**
     * Returns the y-coordinate of the object.
     * @returns The y-coordinate.
     */
    getY(): number;
    /**
     * Sets the y-coordinate of the object.
     * @param y - The y-coordinate to set.
     * @returns The Text object.
     */
    setY(y: number): Text;
    /**
     * Sets the position of the object.
     * @param coor - The position to set.
     * @returns The Text object.
     */
    setCoor(coor: Vector2): Text;
    /**
     * Returns a copy of the position vector of the object.
     * @returns The position vector.
     */
    getCoor(): Vector2;
    /**
     * Sets whether the object is visible.
     * @param visible - Whether the object is visible.
     * @returns The Text object.
     */
    setVisible(visible: boolean): Text;
    /**
     * Returns whether the object is visible.
     * @returns Whether the object is visible.
     */
    isVisible(): boolean;
    /**
     * Returns the text content of the object.
     * @returns The text content.
     */
    getText(): string;
    /**
     * Returns the classes which are used to style the object.
     * @returns The classes.
     */
    getClasses(): string[];
    /**
     * Returns the width of the text in pixels, given a set of styles.
     * @param styles - The styles to use.
     * @returns The width of the text in pixels.
     */
    width(styles: Styles): number;
    /**
     * Translates the position of the object by a given shift vector.
     * @param shift - The shift vector.
     * @returns The Text object.
     */
    translate(shift: Vector2): Text;
}
