import { Vector2, identity, } from '../components';
/**
 * A class representing a circle.
 */
export class Circle {
    /**
     * Creates a new circle.
     * @param coor - The center coordinates of the circle.
     * @param radius - The radius of the circle.
     */
    constructor(coor, radius) {
        this.scale = 1;
        this.visible = true;
        this.transform = identity;
        this.coor = coor;
        this.radius = radius;
    }
    /**
     * Sets a transformation for the circle.
     * @param transform - The transformation to set.
     * @returns The circle object.
     */
    setTransform(transform) {
        this.transform = transform;
        return this;
    }
    /**
     * Gets the transformed X coordinate of the circle center.
     * @returns The transformed X coordinate.
     */
    getTransformedX() {
        return this.transform.applyX(this.coor.x);
    }
    /**
     * Gets the X coordinate of the circle center.
     * @returns The X coordinate.
     */
    getX() {
        return this.coor.x;
    }
    /**
     * Sets the X coordinate of the circle center.
     * @param x - The X coordinate to set.
     * @returns The circle object.
     */
    setX(x) {
        this.coor.x = x;
        return this;
    }
    /**
     * Gets the transformed Y coordinate of the circle center.
     * @returns The transformed Y coordinate.
     */
    getTransformedY() {
        return this.transform.applyY(this.coor.y);
    }
    /**
     * Gets the Y coordinate of the circle center.
     * @returns The Y coordinate.
     */
    getY() {
        return this.coor.y;
    }
    /**
     * Sets the Y coordinate of the circle center.
     * @param y - The Y coordinate to set.
     * @returns The circle object.
     */
    setY(y) {
        this.coor.y = y;
        return this;
    }
    /**
     * Sets the center coordinates of the circle.
     * @param coor - The center coordinates to set.
     * @returns The circle object.
     */
    setCoor(coor) {
        this.coor = coor;
        return this;
    }
    /**
     * Gets the center coordinates of the circle.
     * @returns A copy of the center coordinates as a Vector2 object.
     */
    getCoor() {
        return this.coor.copy();
    }
    /**
     * Gets the transformed center coordinates of the circle.
     * @returns The transformed center coordinates as a Vector2 object.
     */
    getTransformedCoor() {
        return new Vector2(this.getTransformedX(), this.getTransformedY());
    }
    /**
     * Gets the scaled radius of the circle.
     * @returns The scaled radius.
     */
    getScaledRadius() {
        return this.scale * this.radius;
    }
    /**
     * Sets the scaling factor of the circle.
     * @param scale - The scaling factor to set.
     * @returns The circle object.
     */
    setScale(scale) {
        this.scale = scale;
        return this;
    }
    /**
     * Sets the visibility of the circle.
     * @param visible - The visibility to set.
     * @returns The circle object.
     */
    setVisible(visible) {
        this.visible = visible;
        return this;
    }
    /**
     * Determines whether the circle is visible.
     * @returns Whether the circle is visible.
     */
    isVisible() {
        return this.visible;
    }
    /**
     * Gets the classes associated with the circle.
     * @returns The classes associated with the circle.
     */
    getClasses() {
        return ['circle'];
    }
    /**
     * Translates the circle by the given vector.
     * @param shift - The vector by which to translate the circle.
     * @returns The circle object.
     */
    translate(shift) {
        this.coor.add(shift);
        return this;
    }
}
//# sourceMappingURL=circle.js.map